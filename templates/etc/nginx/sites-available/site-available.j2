# {{ ansible_managed }}

map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

server {
    listen 80;
    listen [::]:80;
    {% if item.value.domains | default(false) %}

    server_name {{ item.value.domains | join(' ') }};
    {% endif %}

{% if item.value.letsencrypt | default(false) %}

    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name {{ item.value.domains | join(' ') }};

    # ssl_dhparam /etc/ssl/certs/dhparam.pem;
    ssl_certificate /etc/letsencrypt/live/{{ item.value.domains | first }}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{ item.value.domains | first }}/privkey.pem;

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
    ssl_ecdh_curve secp384r1;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;

{% endif %}

{% if item.value.gzip_enabled | default(true) %}
    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_comp_level 6;
    gzip_http_version 1.1;
    gzip_min_length 256;
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/vnd.ms-fontobject application/x-font-ttf font/opentype image/svg+xml image/x-icon;
{% endif %}

    root {{ item.value.directory | default('/var/www') }};
    index index.html index.htm index.php;

    access_log /var/log/nginx/{{ item.key }}_access.log;
    error_log /var/log/nginx/{{ item.key }}_error.log;

    location /.well-known/acme-challenge {
        proxy_pass http://127.0.0.1:{{ certbot_port }};
    }

    {% for config in item.value.locations %}

    location {{ config['location'] }} {
        {% if config['static'] | default(false) %}

        alias {{ config['static'] }};
        {% else %}

        # Forward headers of the original request
        proxy_pass_request_headers on;

        # And include some standard reverse proxy headers...
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        {% endif %}
        {% if config['websocket'] | default(false) %}

        # Enable websocket support with connection upgrades
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        {% endif %}

{{ config['custom'] | default() }}

        {% if config['proxy_pass'] | default(false) %}

        proxy_pass {{ config['proxy_pass'] }};
        {% endif %}

    }
    {% endfor %}

}
